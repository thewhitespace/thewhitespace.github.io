/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}html{-webkit-box-sizing:border-box;box-sizing:border-box}:after,:before{-webkit-box-sizing:inherit;box-sizing:inherit}dd,dt,h1,h2,h3,h4,h5,h6,li,p,td,th,ul{font-size:1em}a{text-decoration:none}ul li{display:inline-block}body{font-family:Roboto,Roboto Mono,Quicksand,Playfair Display,sans-serif}*{-webkit-box-sizing:border-box;box-sizing:border-box}.def-container{width:100%;max-width:1400px;margin:0 auto}.top-container{width:100%;max-width:1585px;margin:0 auto}.text-center{text-align:center}p{line-height:1.5}.post-container{width:100%;max-width:1400px;margin:0 auto}.header{font-family:Quicksand;font-size:18px}.header__container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:15px 0}.header__nav{margin:0;display:inline-block;padding:0;display:-webkit-box;display:-ms-flexbox;display:flex}.header__nav li{margin-right:60px;display:inline-block}.header__nav li:last-child{margin-right:0}.header__nav li a{color:#333}.global .about{margin-top:160px}.global .about__container{width:100%;max-width:735px;margin:0 auto 40px}.global .about__container h3{margin:0;font-family:Roboto Mono;font-size:24px;color:#333;font-weight:400}.global .about__container p{font-family:Roboto Mono;font-size:18px;font-weight:400;color:#555;text-align:center}.global .about__title{text-align:center;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;position:relative}.global .about__title h2{margin-bottom:20px;position:relative;font-family:Playfair Display;font-size:72px;color:#222}.global .about__title h2 span{position:absolute;top:-19px;left:19px;font-size:18px;color:#555}.global .about__title h2 img{position:absolute}.global .about__title h2 img:first-of-type{left:-50px;top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%)}.global .about__title h2 img:nth-of-type(2){right:-50px;top:-10px}.home{overflow:hidden}.home .top-container{display:grid;grid-template-columns:605px 473px 473px;grid-column-gap:15px;height:100%;min-height:732px;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.home .top-banner{background:#61ffd9;margin:15px;border-radius:18px}.home .top-banner__proj-title{width:605px}.home .top-banner__proj-title h1{font-family:Playfair Display;font-weight:900;font-size:47px;margin:0 0 20px}.home .top-banner__proj-images{border-radius:18px;overflow:hidden;margin-bottom:15px}.home .top-banner .sliderGroup1{background-size:cover;height:517px}.home .top-banner .visuals{position:relative;height:517px;z-index:4}.home .top-banner .visuals__container{position:absolute}.home .top-banner .visuals__descrip{font-family:Roboto}.home .top-banner .slider1{position:relative;width:605px}.home .top-banner .slider2{width:473px}.home .top-banner .slider2 .visuals__container{top:-80px}.home .top-banner .slider3{width:473px}.home .top-banner .slider3 .visuals__container{top:180px}.home .top-banner .slider3 .sliderNav{position:absolute;top:-40px;right:0;z-index:5;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.home .top-banner .slider3 .sliderNav__index{font-family:Roboto Mono;font-size:18px}.home .top-banner .slider3 .sliderNav *{cursor:pointer}.home .top-banner .slider3 .sliderNav>img,.home .top-banner .slider3 .sliderNav>img+span{margin-right:8px}.home .top-banner .visuals1 img{position:absolute;bottom:-59px;left:-55px;z-index:5}.home .top-banner .visuals2 img{position:absolute;top:27px;right:-116px;z-index:-1}.home .members-slide{margin-bottom:5em}.home .members-slide__container{width:100%;max-width:80%;margin-left:auto}.home .members-slide__slider{overflow:hidden;border-radius:19px}.home .members-slide__item{width:312px;height:465px;background-size:cover}.home .members-slide .slick-list{margin:0 -15px}.home .members-slide .slick-slide{margin:0 15px;border-radius:19px;overflow:hidden}.post .post-banner .post-container{display:grid;grid-template-columns:1fr 1fr}.post .post-banner{min-height:732px;background:#61ffd9;margin:15px;border-radius:19px}.post .post-banner__content{margin-right:110px}.post .post-banner__content h1{font-family:Playfair Display;font-weight:900;font-size:47px}.post .post-banner__content p{font-size:18px;letter-spacing:.03em;color:#333}.post .post-banner .post-container{padding-top:55px}.post .post-banner__thumbnail{position:relative}.post .post-banner__thumbnail .thumbnail{position:absolute;right:0;top:30px;height:736px;width:738px;border-radius:19px;background-size:cover;background-position:50%}.post .post-banner__thumbnail img{z-index:-1;position:absolute;bottom:-52px;right:-51px}.post .post-content__container{width:100%;max-width:863px;margin:200px auto 0}.post .post-content p{font-size:18px;color:#333}.post .post-content img{margin:20px 0}.post .post-content .shareto-container{display:inline-block}.post .post-content .shareto{display:inline-block;padding:0;margin:0 0 0 8px}.post .post-content .shareto li{margin-right:5px;display:inline-block;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:32px;height:32px;border-radius:50%;border:1px solid #333;background:#fff;-webkit-transition:all .3s ease-in-out;transition:all .3s ease-in-out;cursor:pointer}.post .post-content .shareto li:hover{background:#333;color:#fff}.post .post-content .shareto li:last-child{margin-right:0}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
